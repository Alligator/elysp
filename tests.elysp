(defmacro test (name actual exp)
  '((fn ()
    (print (string ,name "..."))
    (if (= ,actual ,exp) (println "ok") (error (string "test " ',actual " failed! expected '" ,exp "' but got '" ,actual "'"))))))

# functions
(test "fn" ((fn (x) x) 2) 2)
(test "fn array" ((fn (x) [x x]) 2) [2 2])
(test "fn array two args" ((fn (x y) [x y]) 2 3) [2 3])

# define
(define x 2)
(test "define" x 2)

(define x 3)
(test "redefine" x 3)

# defn
(defn dfn-test (x) x)
(test "defn" (dfn-test 2) 2)

# quote and unqote
(test "quote" '1 1)
(test "unquote" '(1 2 3) (quote (1 2 3)))
(test "quote & unquote shorthand" '(1 ,(+ 1 1) 3) '(1 2 3))

#Â macros and macex
(defmacro double (x) '(quote (,x ,x)))
(test "defmacro" (double 5) '(5 5))
(test "macex" (macex (double 5)) '(quote (5 5)))

# if
(test "if" (if 't "yup" "nope") "yup")
(test "if else" (if nil "yup" "nope") "nope")
